import PDFDocument from "pdfkit";

const generateRecipientPDF = async (bookingData: any): Promise<Buffer> => {
  return new Promise((resolve, reject) => {
    const doc = new PDFDocument();

    const buffers: Buffer[] = [];
    doc.on("data", (chunk) => buffers.push(chunk));
    doc.on("end", () => {
      const pdfBuffer = Buffer.concat(buffers);
      resolve(pdfBuffer);
    });
    doc.fontSize(28).font("Helvetica-Bold").fillColor("#007bff").text("Bus Allotment Report", { align: "center" });
    doc.moveDown(1.5);
    doc.fillColor("#f0f0f0").roundedRect(50, 100, 500, 183, 10).fill();
    doc.fillColor("#333").fontSize(18).font("Helvetica-Bold");
    doc.text("Driver & Bus Details", 75, 120);
    doc.fillColor("#444").fontSize(12).font("Helvetica");

    const details = [
      { label: "Driver ID:", value: bookingData.driverId },
      { label: "Driver Name:", value: bookingData.driverName },
      { label: "Bus ID:", value: bookingData.busId },
      { label: "Bus Name:", value: bookingData.busName },
      { label: "Bus Capacity:", value: bookingData.capacity },
      { label: "Bus Model:", value: bookingData.busModel },
      { label: "License Plate:", value: bookingData.plate },
    ];

    let yOffset = 150;
    details.forEach((detail) => {
      doc.text(detail.label, 75, yOffset).text(detail.value, 200, yOffset);
      yOffset += 20;
    });
    doc.fontSize(10).fillColor("#777").text("This report was generated by Devil Buses.", { align: "center" });
    doc.end();
  });
};

export { generateRecipientPDF };
